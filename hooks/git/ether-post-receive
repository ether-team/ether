#!/usr/bin/python -tt

"""
POST-RECEIVE HOOK

The "post-receive" script is run after receive-pack has accepted a pack
and the repository has been updated.  It is passed arguments in through
stdin in the form
 <oldrev> <newrev> <refname>
For example:
 aa453216d1b3e49e7f6f98441fa56946ddcd6a20 68f7abf4e6f922807889f52bc043ecd31b79f814 refs/heads/master
"""

import sys
import imp
sys.path.append(".")
from optparse import OptionParser

from ether.hooks.git import GitHook
from ether.publisher import AsyncAMQPPublisher

DEFAULT_CONFIG = "/etc/ether/git_postreceive.conf"

def parse_args(argv):
    """ Commandline parser """
    parser = OptionParser(usage="%prog [options]")
    parser.add_option("--config", metavar="<path to conf file>",
                      default=DEFAULT_CONFIG,
                      help="path to configuration file")

    return parser.parse_args(argv)


def main(argv):
    """Script entry point."""

    options, args = parse_args(argv)

    if len(args) > 3:
        commits = [[args[1], args[2], args[3]]]
    else:
        if sys.stdin.isatty():
            print "Standard input is a terminal. Aborting!"
            return 1
        else:
            commits = [line.split() for line in sys.stdin.readlines()]

    conf = imp.load_source("conf", options.config)
    publisher = AsyncAMQPPublisher(conf.AMQP_CONFIG)

    GitHook(publisher, conf.REPO_CONFIG).postreceive(commits)
    return 0

if __name__ == '__main__':
    sys.exit(main(sys.argv))
